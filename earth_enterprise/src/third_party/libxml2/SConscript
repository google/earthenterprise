#-*- Python -*-
#
# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


Import('third_party_env')
libxml2_version = 'libxml2-2.9.1'
libxml2_python_version = libxml2_version.replace('libxml2', 'libxml2-python')
ge_version = libxml2_version.replace('xml2', 'xml2-ge')

num_cpu = GetOption('num_jobs')

libxml2_source = File(
    '#/../third_party/libxml2/%s.tar.gz' % libxml2_version).abspath

current_dir = Dir('.').abspath
build_root = '%s/%s' % (current_dir, libxml2_version)

libxml2_env = third_party_env.DeepCopy()
root_dir = Dir(libxml2_env.exportdirs['root']).abspath
opt_dir = Dir(libxml2_env['optdir']).abspath
install_root = '%s/install' % current_dir
install_root_opt = '%s%s' % (install_root, opt_dir)

# [1] Extract libxml2
libxml2_target = '%s/.extract' % current_dir
libxml2_extract = libxml2_env.Command(
    libxml2_target, libxml2_source,
    [libxml2_env.MultiCommand(
        'mkdir -p %s\n'
        'cd %s\n'
        'tar xzf %s\n'
        'touch %s' % (
            current_dir, current_dir, libxml2_source, libxml2_target))])

if third_party_env['is_hardy'] and not third_party_env['native_cc']:
  env_opt = 'ac_cv_prog_cc_c99=no'
else:
  env_opt = ''

if libxml2_env['release'] or libxml2_env['optimize']:
  config_opt = ''
else:
  config_opt = ''

# [3] Configure libxml2
libxml2_target = '%s/.configure' % current_dir
libxml2_configure = libxml2_env.Command(
    libxml2_target, libxml2_extract,
    [libxml2_env.MultiCommand(
        'cd %s\n'
        '%s%s ./configure --prefix=%s %s\n'
        'touch %s' % (
            build_root,
            libxml2_env['ENV']['mod_env'], env_opt, opt_dir, config_opt,
            libxml2_target))])

# [4] Build
libxml2_target = '%s/.build' % current_dir
libxml2_build = libxml2_env.Command(
    libxml2_target, libxml2_configure,
    [libxml2_env.MultiCommand(
        'cd %s\n'
        '%smake -j%d\n'
        'touch %s' % (build_root, libxml2_env['ENV']['mod_env'], num_cpu,
                      libxml2_target))])

# [5] Create libxml2 master installer
libxml2_target = '%s/.install' % current_dir
libxml2_install = libxml2_env.Command(
    libxml2_target, libxml2_build,
    [libxml2_env.MultiCommand(
        'cd %s\n'
        '%smake DESTDIR=%s mandir=/share/man install\n'
        'cd %s\n'
        'rm -rf lib/libxml2.a lib/libxml2.la share/doc/%s share/doc/%s\n'
        'mkdir -p share/doc/packages/%s\n'
        'cd %s\n'
        'cp -pr README ChangeLog Copyright %s/share/doc/packages/%s\n'
        'touch %s' % (build_root,
                      libxml2_env['ENV']['mod_env'], install_root,
                      install_root,
                      libxml2_version,
                      libxml2_python_version,
                      ge_version,
                      build_root,
                      install_root, ge_version,
                      libxml2_target))])

# [6] Install these into various directories as required for build
# TODO: deploy python libs for build!?
libxml2_target = '%s/.install_for_build' % current_dir
libxml2_install_build = libxml2_env.Command(
    libxml2_target, libxml2_install,
    [libxml2_env.rsync_cmd % ('%s/bin/' % install_root_opt,
                              '%s/bin/' % root_dir),
     libxml2_env.rsync_cmd % ('%s/include/' % install_root_opt,
                              '%s/include/' % root_dir),
     libxml2_env.rsync_cmd % ('%s/lib/' % install_root_opt,
                              '%s/lib/' % root_dir),
     # Replace prefix with root-directory path.
     'sed -i.bak s/"prefix=%s"/"prefix=%s"/g %s/bin/xml2-config' % (
         opt_dir.replace('/', '\/'), root_dir.replace('/', '\/'), root_dir),
     Touch('$TARGET')])

Default(libxml2_install_build)
libxml2_env.ExecuteOnClean('rm -rf %s' % current_dir)

if 'install' in COMMAND_LINE_TARGETS:
  libxml2_env.InstallFileOrDir(
      '%s/bin/' % install_root_opt,
      '%s/' % libxml2_env.installdirs['common_bin'],
      libxml2_install_build, 'install')
  libxml2_env.InstallFileOrDir(
      '%s/lib/' % install_root_opt,
      '%s/' % libxml2_env.installdirs['common_lib'],
      libxml2_install_build, 'install')
  libxml2_env.InstallFileOrDir(
      '%s/share/' % install_root,
      '%s/' % libxml2_env.installdirs['common_share'],
      libxml2_install_build, 'install')
  # Install python libs.
  # Note: have different location in install folder since configure pickes up
  # python-path from Fusion sandbox python specified for build.
  libxml2_env.InstallFileOrDir(
      '%s%s/lib' % (install_root, root_dir),
      '%s/opt/google/gepython/Python-%s/' % (libxml2_env.installdirs['common_root'],
                           libxml2_env['python_version']),
      libxml2_install_build, 'install')

Return('libxml2_extract libxml2_install_build')
