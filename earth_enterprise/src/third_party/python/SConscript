#-*- Python -*-
#
# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


Import('third_party_env')

python_version = 'Python-2.7.5'
python_major_version = 'python2.7'
# need to do "sudo apt-get build-dep python2.7" for getting all dependencies

make_cmd_cpu = 'make -j%d' % GetOption('num_jobs')

ge_version = python_version.replace('Python', 'Python-ge')

current_dir = Dir('.').abspath
install_root = '%s/install' % current_dir
build_root = '%s/%s' % (current_dir, python_version)
python_source = File('#/../../earth_enterprise/third_party/python/%s.tgz'
                   % python_version).abspath
patch_source = Dir('#/../../../geo/earth_enterprise/src/third_party/python'
                  ).abspath

python_env = third_party_env.DeepCopy()
root_dir = Dir(python_env.exportdirs['root']).abspath
opt_dir = python_env['optdir']
gepython_dir = '%s/gepython' % opt_dir
python_dir = '%s/%s' % (gepython_dir, python_version)

org = '-I%sinclude' % root_dir
new = '-idirafter %sinclude' % root_dir

python_target = '%s/gcc' % current_dir
python_cc = python_env.Command(
    python_target, python_env['ENV']['CC'],
    [python_env.MultiCommand(
        "cat %s | sed -e 's|%s|%s|g' > %s\n"
        "chmod 755 %s" % (python_env['ENV']['CC'], org, new, python_target, python_target))])
python_env['ENV']['CC'] = python_target

python_target = '%s/g++' % current_dir
python_cxx = python_env.Command(
    python_target, python_env['ENV']['CXX'],
    [python_env.MultiCommand(
        "cat %s | sed -e 's|%s|%s|g' > %s\n"
        "chmod 755 %s" % (python_env['ENV']['CXX'], org, new, python_target, python_target))])
python_env['ENV']['CXX'] = python_target

if GetOption('clean'):
  python_env.Execute('rm -rf %s' % current_dir)

# [1] Extract python
python_target = '%s/.extract' % current_dir
python_extract = python_env.Command(
    python_target, [python_source, python_cc, python_cxx],
    [python_env.MultiCommand(
        'mkdir -p %s\n'
        'cd %s\n'
        'tar xzf %s\n'
        'touch %s'% (current_dir, current_dir, python_source, python_target))])

# [3] Configure python
python_target = '%s/.configure' % current_dir
python_configure = python_env.Command(
    python_target, python_extract,
    [python_env.MultiCommand(
        'cd %s\n'
        '%s./configure --prefix=%s --exec-prefix=%s '
        '--mandir=/opt/google/share/man --enable-shared '
        '--with-system-expat \n'
        'touch %s' % (
            build_root,
            python_env['ENV']['mod_env'], python_dir, python_dir,
            python_target))])

# [4] Build python
if third_party_env['is_hardy'] and not third_party_env['native_cc']:
  ld = '%s -shared' % python_env['ENV']['CXX']
else:
  ld = '%s -shared' % python_env['ENV']['CXX']
make_cmd = '%s LD_SHARED="%s"' % (make_cmd_cpu, ld)
python_target = '%s/.build' % current_dir
python_build = python_env.Command(
    python_target, python_configure,
    [python_env.MultiCommand(
        'cd %s\n'
        'env \n'
        '%s\n'
        'touch %s' % (build_root, make_cmd,
                      python_target))])

# [5] Create python master installer
make_cmd = 'make LD_SHARED="%s"' % (ld)
share_doc_packages_dir = '%s/opt/google/share/doc/packages/%s' % (install_root, python_version)
python_target = '%s/.install' % current_dir
python_install = python_env.Command(
    python_target, python_build,
    [python_env.MultiCommand(
        'cd %s\n'
        '%s %s install DESTDIR=%s\n'
        'mkdir -p %s\n'
        'cp -pr LICENSE README %s\n'
        'touch %s' % (
            build_root,
            python_env['ENV']['mod_env'], make_cmd, install_root,
            share_doc_packages_dir,
            share_doc_packages_dir,
	    python_target))])

# [6] Install these into various directories as required for build
python_target = '%s/.install_for_build' % current_dir
python_install_build = python_env.Command(
    python_target, python_install,
    [python_env.rsync_cmd % ('%s%s/bin/' % (install_root, python_dir),
                             '%s/bin/' % root_dir),
     python_env.rsync_cmd % ('%s%s/include/' % (install_root, python_dir),
                             '%s/include/' % root_dir),
     python_env.rsync_cmd % ('%s%s/lib/' % (install_root, python_dir),
                             '%s/lib/' % root_dir),

     Touch('$TARGET')])

Default(python_install_build)
python_env.ExecuteOnClean('rm -rf %s' % current_dir)


if 'install' in COMMAND_LINE_TARGETS:
  # install /opt/google/gepython/Python-x.x.x
  python_env.InstallFileOrDir(
      '%s%s/' % (install_root, gepython_dir),
      '%s%s/' % (
          python_env.installdirs['common_root'], gepython_dir),
       python_install, 'install')

  # install /opt/google/share/
  python_env.InstallFileOrDir(
      '%s/opt/google/share/' % install_root,
      '%s/opt/google/share/' % Dir(
          python_env.installdirs['common_root']).abspath,
      python_install, 'install')

Return('python_extract python_install_build')
