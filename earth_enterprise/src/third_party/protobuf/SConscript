#-*- Python -*-
#
# Copyright 2021 the Open GEE Contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


Import('third_party_env')
import os
import subprocess

protobuf_version = 'protobuf-3.6.1'
make_cmd_cpu = 'make -j%d' % GetOption('num_jobs')
ge_version = protobuf_version.replace('protobuf', 'protobuf-ge')

current_dir = Dir('.').abspath
build_root = '%s/%s' % (current_dir, protobuf_version)
protobuf_source = File('#/../../earth_enterprise/third_party/protobuf/%s.tar.gz'
                   % 'v3.6.1').abspath


protobuf_env = third_party_env.DeepCopy()

optdir = protobuf_env['optdir']
root_dir = Dir(protobuf_env.exportdirs['root']).abspath

if GetOption('clean'):
  protobuf_env.Execute('rm -rf %s' % current_dir)

# [1] Extract protobuf
protobuf_target = '%s/.extract' % current_dir
protobuf_extract = protobuf_env.Command(
    protobuf_target, [protobuf_source],
    [protobuf_env.MultiCommand(
        'mkdir -p %s\n'
        'cd %s\n'
        'tar xzf %s\n'
        'touch %s'% (current_dir, current_dir, protobuf_source, protobuf_target))])

# [7] Configure protobuf
protobuf_target = '%s/.configure_protobuf' % current_dir
configure_cmd = (
    'cd %s\n'
    './autogen.sh\n'
    '%s./configure --prefix=%s --enable-shared\n'
    'touch %s' % (
        build_root, protobuf_env['ENV']['mod_env'], 
        optdir, protobuf_target))

protobuf_configure = protobuf_env.Command(
    protobuf_target, [protobuf_extract],
    [protobuf_env.MultiCommand(configure_cmd)])

# [8] Build protobuf
if third_party_env['is_min_ubuntu'] and not third_party_env['native_cc']:
  ld = '%s -shared' % protobuf_env['ENV']['CXX']
else:
  ld = '%s -shared' % protobuf_env['ENV']['CXX']
make_cmd = '%s LD_SHARED="%s"' % (make_cmd_cpu, ld)
protobuf_target = '%s/.build_protobuf' % current_dir
protobuf_build = protobuf_env.Command(
    protobuf_target, protobuf_configure,
    [protobuf_env.MultiCommand(
        'cd %s\n'
        '%s%s\n'
        'touch %s' % (build_root, protobuf_env['ENV']['mod_env'], make_cmd,
                      protobuf_target))])

# [9] Create protobuf master installer
make_cmd = 'make LD_SHARED="%s"' % (ld)
install_root = '%s/install' % current_dir
python_build_root = '%s/python' % build_root
install_root_opt = '%s%s' % (install_root, optdir)
protobuf_target = '%s/.install' % current_dir
protobuf_install = protobuf_env.Command(
    protobuf_target, protobuf_build,
    [protobuf_env.MultiCommand(
        'cd %s\n'
        '%s %s DESTDIR=%s install \n'
        'cd %s\n'
        '%s setup.py build\n'
        '%s setup.py install --prefix=%s\n'
        'touch %s' % (
            build_root, protobuf_env['ENV']['mod_env'], make_cmd, 
            install_root, python_build_root, protobuf_env['python_bin'], 
            protobuf_env['python_bin'], install_root, protobuf_target))])

# [11] Install these into various directories as required for build
protobuf_target = '%s/.install_for_build' % current_dir
protobuf_install_build = protobuf_env.Command(
    protobuf_target, [protobuf_install],
    [protobuf_env.rsync_cmd % (
        '%s/bin/' % install_root_opt,
        '%s/' % Dir(protobuf_env.exportdirs['bin']).abspath),
     protobuf_env.rsync_cmd % (
         '%s/include/' % install_root_opt,
         '%s/include/' % Dir(protobuf_env.exportdirs['root']).abspath),
     protobuf_env.rsync_cmd % (
         '%s/src/google/protobuf/stubs/strutil.h' % build_root,
         '%s/include/google/protobuf/stubs' % Dir(protobuf_env.exportdirs['root']).abspath),
     protobuf_env.rsync_cmd % (
         '%s/lib/' % install_root_opt,
         '%s/' % Dir(protobuf_env.exportdirs['lib']).abspath),
     Touch('$TARGET')])
Default(protobuf_install_build)

if 'install' in COMMAND_LINE_TARGETS:
  # Copies protobuf python bindings from ../install/lib/python3.8/site-packages
  # to ../opt/google/gepython/../site-packages/ folder.
  protobuf_env.InstallFileOrDir(
      '%s/lib/python%s/site-packages/%s-py%s.egg/' % (install_root,
                                          protobuf_env['python_major_version'], protobuf_version,
                                          protobuf_env['python_major_version']),
      '%s/opt/google/gepython/Python-%s/lib/python%s/site-packages/' % (
          protobuf_env.installdirs['common_root'], protobuf_env['python_version'],
          protobuf_env['python_major_version']),
      protobuf_install_build, 'install')

  # Copies protobuf libraries from ../install/lib/ folder to /opt/google/lib.
  protobuf_env.Alias(
      'install', [protobuf_install_build],
      [protobuf_env.rsync_excl_cmd %(
          'python%s' % protobuf_env['python_major_version'],
          '%s/lib/' % install_root_opt,
          '%s/opt/google/lib' % protobuf_env.installdirs['common_root'])])

Return('protobuf_extract protobuf_install_build')
