#-*- Python -*-
#
# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# TODO:
# - put compiled files into binaries directory (OPT/REL/...).
# - add build/installer/clean up targets.

import fnmatch
import pdb
import os
import shlex
import subprocess

Import('env')

wsgi_env = env.Clone()

root_dir = Dir(wsgi_env.exportdirs['root']).abspath
python_bin = wsgi_env['python_bin']
compiler_cmd = '%s -m py_compile' % python_bin
wsgi_src_path = Dir('#/server/wsgi').abspath

# List of directories to be compiled/installed.
install_dirs = ['common','conf', 'serve','search','wms']


# Note: Added for testing/debugging.
# It is not used by build system.
if 'build_py' in COMMAND_LINE_TARGETS:
  for dir in install_dirs:
    for root, dirnames, filenames in os.walk(dir):
      py_src_path = os.path.join(wsgi_src_path, root)
      # Check for python files.
      for file in fnmatch.filter(filenames, '*.py'):
        python_file = os.path.join(py_src_path, file)
        # Create '*.pyc' for the python file.
        command_line = '%s %s' % (compiler_cmd, python_file)
        args = shlex.split(command_line)
        subprocess.Popen(args)


if 'install' in COMMAND_LINE_TARGETS:
  # Install /opt/google/gehttpd/wsgi-bin directory
  wsgi_bin_dir = Dir(env.installdirs['httpdwsgi']).abspath
  if not os.path.exists(wsgi_bin_dir):
    os.makedirs(wsgi_bin_dir)

  for dir in install_dirs:
    for root, dirnames, filenames in os.walk(dir):
      compiled_files = []

      # Python files in 'search/plugin' folder should be copied as '*.py'.
      if root == "search/plugin" or root == "search/common":
        continue

      py_src_path = os.path.join(wsgi_src_path, root)
      # Check for python files.
      for file in fnmatch.filter(filenames, '*.py'):
        python_file = os.path.join(py_src_path, file)
        # Create '*.pyc' for the python file.
        command_line = '%s %s' % (compiler_cmd, python_file)
        args = shlex.split(command_line)
        subprocess.Popen(args)
        compiled_file = file.split('.')[0] + '.pyc'
        compiled_files.append(os.path.join(root, compiled_file))
      wsgi_env.install('httpdwsgi', compiled_files, root)

      # Check for wsgi files.
      for file in fnmatch.filter(filenames, '*.wsgi'):
        wsgi_file = os.path.join(root, file)
        wsgi_env.install('httpdwsgi', wsgi_file, root)

  wsgi_env.installDirExcluding(
      'httpdwsgi', 'search/common', [], 'search/common')
  wsgi_env.installDirExcluding(
      'httpdwsgi', 'search/plugin', [], 'search/plugin')
  wsgi_env.installDirExcluding(
      'server_search', 'search/conf', [], 'conf')

  # Install the ge_logging.conf under /opt/google/gehttpd/conf.
  wsgi_env.install('httpd', ['conf/ge_logging.conf'], 'conf')

  # Install 'postgres.properties' file under
  # /opt/google/gehttpd/wsgi-bin/conf folder.
  wsgi_env.install('httpdwsgi', ['conf/postgres.properties'], 'conf')
