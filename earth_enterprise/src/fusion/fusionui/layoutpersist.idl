// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


#include <string>
#include <Qt/qstring.h>
#include <list>
#include <map>

class LayoutPersist
{
  int width;
  int height;
  int xpos;
  int ypos;
  bool showme;
  int currentProject = 0;

#pragma LoadAndSave
};

class AssetManagerLayout
{
  enum ViewMode { List, Preview };
  int width;
  int height;
  int xpos;
  int ypos;
  bool showme;

  ViewMode viewMode = AssetManagerLayout::List;
  QString selectedPath = QString();
  int filterType = 0;
  int filterSubType = 0;
  bool showHidden = false;
  std::list<int> detailSplitter = std::list<int>(2, 0);
  std::list<int> folderSplitter = std::list<int>(2, 0);

  class Size {
    xmlattr int width;
    xmlattr int height;
  };

#hquote
  typedef std::map<QString, AssetManagerLayout::Size> SizeMap;
  typedef std::map<QString, AssetManagerLayout::Size>::iterator SizeMapIterator;
#/hquote

  std::map<QString, AssetManagerLayout::Size> asset_editors = AssetManagerLayout::SizeMap();

#pragma LoadAndSave

#hquote
  AssetManagerLayout::Size FindLayoutByName(const QString& name);
  void SetLayoutSize(const QString& name, int width, int height);
#/hquote

#cppquote
  AssetManagerLayout::Size AssetManagerLayout::FindLayoutByName(const QString& name) {
    std::map<QString, AssetManagerLayout::Size>::iterator found =
        asset_editors.find(name);
    return found != asset_editors.end()
      ? found->second
      : AssetManagerLayout::Size(-1, -1);
  }

  void AssetManagerLayout::SetLayoutSize(const QString& name, int width, int height) {
    AssetManagerLayout::Size size = FindLayoutByName(name);
    size.width = width;
    size.height = height;
    asset_editors[name] = size;
  }
#/cppquote
};

class TemplateImportLayout
{
  int width;
  int height;

  QString lastDirectory = QString();

#pragma LoadAndSave
};

class FeatureEditorLayout
{
  int width;
  int height;
  int xpos;
  int ypos;
  bool showme;

#pragma LoadAndSave
};
