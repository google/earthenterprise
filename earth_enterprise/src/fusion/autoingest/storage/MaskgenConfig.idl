// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


#include <string>
#include <khTypes.h>
#include <autoingest/.idl/storage/AssetDefs.h>
#requiresgetheapusage

#cppquote
#include <autoingest/.idl/storage/AssetDefs_impl.h>
#/cppquote


class MaskgenConfig {
#pragma NoVoidConstructor
  enum Mode { Unset, Mask, Prep, Preview }; // Unset needed for backwards
  // compatibility w/ old configs
  uint feather;
  Mode mode;
  int  band = 0;
  int  fillvalue = -1;      // -1 -> use corner colors
  uint threshold = uint(0);
  uint holesize  = uint(0); // 0 -> don't check for holes
  bool whitefill = false;   // do extra checks to find AirPhoto type white
                            // blocks near edge of fill.
  // For terrain, a comma-separated list of values and ranges to be masked out.
  // E.g. "-9999,0.1:10" means mask -9999 and 0.1 to 10 inclusive.
  std::string nodata = std::string();

#pragma GenerateIsUpToDate

#hquote
  void SetTypeDefaults(AssetDefs::Type type);
  void SetFromOldValues(Mode oldmode, uint oldfeather);
  MaskgenConfig(AssetDefs::Type type) {
    SetTypeDefaults(type);
  }
  MaskgenConfig(void) {
    SetFromOldValues(Unset, 100);
  }
#/hquote


#cppquote
#include <notify.h>

void MaskgenConfig::SetTypeDefaults(AssetDefs::Type type) {
  switch (type) {
    case AssetDefs::Imagery:
      mode = Mask;
      feather   =  100;
      band      =  1; // green
      fillvalue = -1; // use corner colors
      threshold =  0;
      holesize  =  0; // don't fill holes
      whitefill =  false; // don't look for weird white patches
      nodata    = ""; // not used for imagery
      break;
    case AssetDefs::Terrain:
      mode = Mask;
      feather   =  100;
      band      =  0; // green
      fillvalue = -1; // use nodata or corner elevs
      threshold =  0;
      holesize  =  0; // don't fill holes
      whitefill =  false; // don't look for weird white patches
      nodata    = "-99999:0"; // fill elevations <= 0
      break;
    default:
      notify(NFY_WARN, "Internal error: Bad type for MaskgenConfig");
  }
}

void MaskgenConfig::SetFromOldValues(Mode oldmode, uint oldfeather) {
  mode      =  oldmode;
  feather   =  oldfeather;
  band      =  1; // green
  fillvalue = -1; // use corner colors
  threshold =  0;
  holesize  =  0; // don't fill holes
  whitefill =  true; // don't look for weird white patches
  nodata    = "";
}

#/cppquote


};
