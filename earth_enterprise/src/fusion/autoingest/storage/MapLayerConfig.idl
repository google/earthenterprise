// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


#include <autoingest/.idl/storage/LayerLegend.h>
#include <autoingest/.idl/storage/MapSubLayerConfig.h>
#requiresgetheapusage

#cppquote
#include <autoingest/.idl/storage/LayerLegend_impl.h>
#include <autoingest/.idl/storage/MapSubLayerConfig_impl.h>
#/cppquote


class MapLayerConfig {
  
  LayerLegend legend;
  std::vector<MapSubLayerConfig> subLayers;

  // ChannelID Unique across all of fusion
  uint32      fuid_channel_ = uint32(0);

#hquote
  bool HasSearchFields(void) const;

  // Resets all IDs as it is in a config for a just created asset.
  void ResetIds(void) {
    fuid_channel_ = 0;
  }
#/hquote

#cppquote

bool
MapLayerConfig::HasSearchFields(void) const
{
  for (std::vector<MapSubLayerConfig>::const_iterator l = subLayers.begin();
       l != subLayers.end(); ++l) {
    if (l->HasSearchFields())
      return true;
  }
  return false;
}

#/cppquote

#pragma GenerateIsUpToDate
};

class MapLayerEditRequest {
  std::string assetname;
  MapLayerConfig config;
  khMetaData meta;

#pragma StrLoadAndSave
};
