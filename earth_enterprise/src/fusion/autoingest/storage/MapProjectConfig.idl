// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


#include <autoingest/.idl/storage/MapLayerConfig.h>
#include <autoingest/.idl/storage/LayerLegend.h>
#include <searchtabs/.idl/SearchTabs.h>
#requiresgetheapusage

#cppquote
#include <autoingest/.idl/storage/MapLayerConfig_impl.h>
#include <autoingest/.idl/storage/LayerLegend_impl.h>
#include <searchtabs/.idl/SearchTabs_impl.h>
#/cppquote


class MapProjectConfig {
  class LayerItem {
    std::string assetRef = std::string();
    Defaultable<LayerLegend> legend = Defaultable<LayerLegend>();
    bool skipLayer = false;
#pragma GenerateIsUpToDate
  };

  std::vector<LayerItem> layers = std::vector<MapProjectConfig::LayerItem>();
  SearchTabLabelOverrides poi_search_tab_overrides = SearchTabLabelOverrides::DefaultPOIOverrides();

#pragma GenerateIsUpToDate

#hquote
 public:
  void AddLayer(const LayerItem& layer_item);
  void DeleteLayer(const LayerItem& layer_item);
  bool HasSearchFields(void) const;
#/hquote

#cppquote
  // see fusion/autoingest/MapProjectConfigImpl.cpp for
  // implementations of MapProjectConfig methods
#/cppquote

};

class MapProjectEditRequest {
  std::string assetname;
  MapProjectConfig config;
  khMetaData meta;

#pragma StrLoadAndSave
};
