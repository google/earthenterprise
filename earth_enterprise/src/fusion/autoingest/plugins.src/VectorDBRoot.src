// Copyright 2017 Google Inc.
// Copyright 2020 The Open GEE Contributors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#config Name      VectorDBRoot
#config Base      Leaf
#config Config    VectorDBRootConfig
#config Subtype   VectorDBRoot
#config FixedType Vector


// ===== VectorDBRootAsset.h =====
#include <autoingest/.idl/storage/VectorDBRootConfig.h>

// ===== VectorDBRootAsset.cpp =====

// ===== VectorDBRootAssetD.h =====


// ===== VectorDBRootAssetD.cpp =====
#include <autoingest/plugins/VectorFuseAsset.h>


void
VectorDBRootAssetVersionImplD::DoSubmitTask(void)
{
  // Create and save the config that the tool uses
  std::vector<std::string> fuseLODFiles;
  fuseLODFiles.reserve(config.layers.size());
  {
    unsigned int i = 0;
    for (std::vector<LayerConfig>::const_iterator layer
           = config.layers.begin();
         layer != config.layers.end(); ++layer) {

      std::string lodfile;
      if (layer->IsStreamedLayer()) {
        VectorFuseAssetVersion fuse(inputs[i++]);
        std::string fusedir = fuse->GetOutputFilename(0);
        if (khExists(fusedir + "/lodtable")) {
          lodfile = fusedir + "/lodtable";
        }
      }

      fuseLODFiles.push_back(lodfile);
    }
  }

  DBRootGenConfig toolconfig = DBRootGenConfig(config,
                                               fuseLODFiles);
  std::string dbrootConfigFilename = WorkingFilename("dbrootconfig.xml");
  toolconfig.Save(dbrootConfigFilename);


  TaskDef task(*this);
  task.AddOutput(WorkingFileRef("dbroot"),
                 5000000 /* sizeEstimate */);

  // submit the task
  task << "gedbrootgen"
       << "--config" << dbrootConfigFilename
       << "$OUTPUT";
  theAssetManager.SubmitTask(GetRef(), task);
}
