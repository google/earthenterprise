#-*- Python -*-
#
# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

Import('env')


# ****************************************************************************
# ***  apps that are NOT installed
# ****************************************************************************
env.executable('gefindsrconvol', ['gefindsrconvol.cpp'],
               LIBS=['geautoingest', 'gecommon', 'gemiscconfig', 'geutil', 'QtCore', 'QtGui', 'gexml', 'xerces-c'])
env.executable('gefindfilesonvol', ['gefindfilesonvol.cpp'],
               LIBS=['geautoingest', 'gemiscconfig', 'geutil', 'gecommon', 'QtCore', 'QtGui', 'gexml', 'xerces-c'])


# ****************************************************************************
# ***  apps that build from own .cpp, link against geautoingest, and we want
# ***  installed
# ****************************************************************************
appbase = ['getop',
           'gebuild',
           'geresume',
           'genewvectorresource',
           'geaddtoimageryproject',
           'geaddtovectorproject',
           'gedropfromimageryproject',
           'gedropfromvectorproject',
           'genewdatabase',
           'gequery',
           'geexportlayertemplate',
           'geapplylayertemplate',
           'geaddtomapproject',
           ]
env.install('fusion_bin',
            env.executable('genewmapdatabase', 'genewmapdatabase.cpp',
            LIBS=['geautoingest', 'gefconfigutil', 'geutil', 'gecommon', 'QtCore', 'QtGui']))
env_tmp = env.Clone()
env_tmp['CPPFLAGS'] += ['-Ifusion/gst']
env_tmp.install('fusion_bin',
            env_tmp.executable('genewmaplayer', 'genewmaplayer.cpp',
            LIBS=['geautoingest', 'gefconfigutil', 'geutil', 'gecommon', 'QtCore', 'QtGui']))
env.install('fusion_bin', map(lambda app: env.executable(app, [app+'.cpp'],
                                                  LIBS=['geautoingest',
                                                  'gefconfigutil', 'gesearchtabs', 'gemiscconfig', 'geutil', 'gecommon', 'QtCore', 'QtGui','gexml', 'xerces-c']),
                       appbase))

# ****************************************************************************
# ***  apps w/ extra libs
# ****************************************************************************
genewimageryresource = env.executable('genewimageryresource',
                                      ['genewimageryresource.cpp'],
                                      LIBS=['geautoingest', 'gegdal', 'geutil', 'gecommon', 'gdal', 'QtCore', 'QtGui', 'geos'])
# deprecated
# gepublishdatabase = env.executable('gepublishdatabase',
#                                   ['gepublishdatabase.cpp'],
#                                   LIBS=['geautoingest', 'gepublish', 'dbmanifest', 'geutil', 'gecommon', 'QtCore' ])

gedisconnectedsend = env.executable('gedisconnectedsend',
                                   ['gedisconnectedsend.cpp'],
                                   LIBS=['geautoingest', 'dbmanifest', 'gemiscconfig', 'geutil', 'gecommon', 'QtCore', 'QtGui', 'gexml', 'xerces-c'])
# deprecated
# gedisconnectedreceive = env.executable('gedisconnectedreceive',
#                                   ['gedisconnectedreceive.cpp'],
#                                   LIBS=['geutil', 'geconfigutil', 'gefconfigutil', 'gecommon', 'QtCore'])

# deprecated
# gedisconnectedclean = env.executable('gedisconnectedclean',
#                                   ['gedisconnectedclean.cpp'],
#                                   LIBS=['geutil', 'gecommon', 'QtCore'])

geextractdbs = env.executable(
    'geextractdbs',
    ['geextractdbs.cpp'] +
    env.ObjFromOtherDir(['fusion/dbgen/.idl/DBConfig']),
    LIBS=['geautoingest', 'gemiscconfig', 'gesearchtabs', 'geindex_r', 'geutil', 'gecommon', 'gexml', 'xerces-c', 'QtCore', 'QtGui'])
env.install('fusion_bin', [ genewimageryresource, gedisconnectedsend, 'gecleanupcombinedrpassets.py' ])
env.install('disconnected_bin', [ gedisconnectedsend ])
env.install('tools_bin', [ geextractdbs ])

# ****************************************************************************
# ***  apps made by linking to others
# ****************************************************************************
links = {
    'gecancel'                  : 'geresume',
    'geclean'                   : 'geresume',
    'geclearbad'                : 'geresume',
    'gesetbad'                  : 'geresume',

    'genewterrainresource'      :'genewimageryresource',
    'gemodifyimageryresource'   :'genewimageryresource',
    'gemodifyterrainresource'   :'genewimageryresource',

    'gemodifyvectorresource'    :'genewvectorresource',

    'geaddtoterrainproject'     :'geaddtoimageryproject',
    'genewimageryproject'       :'geaddtoimageryproject',
    'genewterrainproject'       :'geaddtoimageryproject',
    'gemodifyimageryproject'    :'geaddtoimageryproject',
    'gemodifyterrainproject'    :'geaddtoimageryproject',

    'genewvectorproject'        :'geaddtovectorproject',
    'gemodifyvectorproject'     :'geaddtovectorproject',

    'gedropfromterrainproject'  :'gedropfromimageryproject',

    'gemodifydatabase'          :'genewdatabase',
    'gemodifymapdatabase'       :'genewmapdatabase',


    'genewmapproject'           :'geaddtomapproject',
    'gemodifymapproject'        :'geaddtomapproject',
    'gedropfrommapproject'      :'geaddtomapproject',
}

# links are made in install/bin directory
for link, target in links.items():
    env.executableLink('fusion_bin', link, target)
