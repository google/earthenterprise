#-*- Python -*-
#
# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import os
import time

Import('env')
env = env.Clone()

# current_dir = Dir('.').abspath

SConscript('shared/SConscript', exports='env')
SConscript('servers/fileunpacker/shared/SConscript', exports='env')
SConscript('cutter/cgi-bin/SConscript', exports='env')
SConscript('cutter/htdocs/SConscript', exports='env')
SConscript('tools/SConscript', exports='env')

portableglobebuilder = env.StaticObject('portableglobebuilder.cpp')
portablemapbuilder = env.StaticObject('portablemapbuilder.cpp')
portablepacketwriter = env.StaticObject('portablepacketwriter.cpp')
deltabuilder = env.StaticObject('deltabuilder.cpp')
createmetadbroot = env.StaticObject('createmetadbroot.cpp')

cutspeclib_sources = ['cutspec.cpp']

cutspec = env.sharedLib('cutspec', cutspeclib_sources, LIBS=['gecommon'])
env.install('common_lib', [cutspec])

gepartialglobebuilder = env.executable(
    'gepartialglobebuilder',
    ['gepartialglobebuilder.cpp', 'partialglobebuilder.cpp',
     portablepacketwriter],
    LIBS=['sharedportablelib', 'gesimpleearthstream',
          'sgl', 'gif', 'png12', 'jpeg',
          'freetype', 'geutil', 'gecommon', 'cutspec',
          'geqtpacket', 'geos', 'qtutils'])

# Do NOT add to installer! Internal use only!
gesimpleencode = env.executable('gesimpleencode',
                                ['gesimpleencode.cpp'],
                                LIBS=['geutil', 'gecommon'])

gedeltabuilder = env.executable(
    'gedeltabuilder',
    ['gedeltabuilder.cpp', deltabuilder, portablepacketwriter],
    LIBS=['sharedportablelib', 'gesimpleearthstream',
          'sgl', 'gif', 'png12', 'jpeg',
          'freetype', 'geutil', 'gecommon', 'geqtpacket', 'geos'])

geportableglobebuilder = env.executable(
    'geportableglobebuilder',
    ['geportableglobebuilder.cpp', portableglobebuilder, portablepacketwriter],
    LIBS=['sharedportablelib', 'gesimpleearthstream',
          'sgl', 'gif', 'png12', 'jpeg',
          'freetype', 'geutil', 'gecommon', 'geqtpacket', 'geos', 'qtutils'])

gecreatemetadbroot = env.executable(
    'gecreatemetadbroot',
    ['gecreatemetadbroot.cpp', 'createmetadbroot'],
    LIBS=['gecommon', 'gedbroot', 'geprotobuf'])

geportablemapbuilder = env.executable(
    'geportablemapbuilder',
    ['geportablemapbuilder.cpp', portablemapbuilder,
     portableglobebuilder, portablepacketwriter],
    LIBS=['sharedportablelib', 'gesimpleearthstream',
          'sgl', 'gif', 'png12', 'jpeg',
          'freetype', 'geutil', 'gecommon', 'geqtpacket', 'geos', 'qtutils'])

geportableglobepacker = env.executable(
    'geportableglobepacker',
    ['geportableglobepacker.cpp'],
    LIBS=['sharedportablelib', 'geutil', 'gecommon'])

geportableglcpacker = env.executable(
    'geportableglcpacker',
    ['geportableglcpacker.cpp'],
    LIBS=['sharedportablelib', 'geutil', 'gecommon'])


portable_glc_reader_sobj = env.SharedObject('servers/fileunpacker/shared/portable_glc_reader.cpp')

geglxinfo = env.executable(
    'geglxinfo',
    ['geglxinfo.cpp', portable_glc_reader_sobj],
    LIBS=['geutil', 'gecommon', 'glb', 'geprotobuf', 'geqtpacket'])

# Do NOT install this tool.
gedecode = env.executable('gedecode',
                          ['gedecode.cpp'],
                          LIBS=['geutil', 'gecommon'])

gerewritedbroot = env.executable(
    'gerewritedbroot',
    ['gerewritedbroot.cpp', 'rewritedbroot.cpp'],
    LIBS=['serverreaderlib', 'gedbroot', 'gesimpleearthstream',
          'gecommon', 'geutil', 'geprotobuf'])

gekmlgrabber = env.executable('gekmlgrabber',
                              ['gekmlgrabber.cpp'],
                              LIBS=['serverreaderlib', 'gesimpleearthstream',
                                    'gecommon', 'geutil'])

polygontoqtnodes = env.StaticObject('polygontoqtnodes.cpp')

gepolygontoqtnodes = env.executable(
    'gepolygontoqtnodes',
    ['gepolygontoqtnodes.cpp', polygontoqtnodes],
    LIBS=['geutil', 'gecommon', 'geqtpacket', 'qtutils'])

# Install portable commands
env.install('server_bin', [geportableglobebuilder, geportablemapbuilder,
                           gepartialglobebuilder,
                           geportableglobepacker, geportableglcpacker,
                           gerewritedbroot, gecreatemetadbroot,
                           gekmlgrabber, gepolygontoqtnodes, geglxinfo])

# Tests
portableglobebuilder_test = env.test(
    'portableglobebuilder_test',
    ['portableglobebuilder_unittest.cpp',
     portableglobebuilder, portablepacketwriter],
    LIBS=['sharedportablelib', 'gtest',
          'geutil', 'gecommon', 'geqtpacket',
          'geos', 'gesimpleearthstream', 'qtutils'])

portablemapbuilder_test = env.test(
    'portablemapbuilder_test',
    ['portablemapbuilder_unittest.cpp', portablemapbuilder,
     portableglobebuilder, portablepacketwriter],
     LIBS=['sharedportablelib', 'gtest',
           'geutil', 'gecommon', 'geqtpacket',
           'geos', 'gesimpleearthstream', 'qtutils'])

cutspec_test = env.test('cutspec_test',
                        ['cutspec_unittest.cpp'],
                        LIBS=['cutspec', 'gtest',
                              'geutil', 'gecommon', 'geqtpacket',
                              'geos', 'gesimpleearthstream'])

# TODO: Add test
# deltabuilder_test = env.test('deltabuilder_test',
#                              ['deltabuilder_unittest.cpp',
#                              deltabuilder],
#                              LIBS=['sharedportablelib', 'gtest',
#                                    'geutil', 'gecommon', 'geqtpacket'])

polygontoqtnodes_test = env.test(
    'polygontoqtnodes_unittest',
    ['polygontoqtnodes_unittest.cpp', polygontoqtnodes],
    LIBS=['gtest', 'geutil', 'gecommon', 'geqtpacket', 'qtutils'])

createmetadbroot_unittest = env.test(
    'createmetadbroot_unittest',
    ['createmetadbroot_unittest.cpp', 'createmetadbroot'],
    LIBS=['gtest', 'gecommon', 'gedbroot', 'geprotobuf'],
    CPPFLAGS='-Wno-error=narrowing')

rewritedbroot_unittest = env.test(
    'rewritedbroot_unittest',
    ['rewritedbroot_unittest.cpp', 'rewritedbroot'],
    LIBS=['gtest', 'serverreaderlib', 'gedbroot', 'gesimpleearthstream',
          'gecommon', 'geutil', 'geprotobuf'],
    CPPFLAGS='-Wno-error=narrowing')
