#
# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# -*- Python -*-
import os

Import('env')

# ****************************************************************************
# ***  fusionSymlinks for backwards compatibility wit 2.4 scripts
# ***  There are only made in the install dir (not the build dir)
# ****************************************************************************
fusionSymLinks = {
   'khtop'                    : 'getop',
   'khaddtovectorproject'     : 'geaddtovectorproject',
   'khdropfromvectorproject'  : 'gedropfromvectorproject',
   'khmodifyvectorproject'    : 'gemodifyvectorproject',
   'khnewvectorproject'       : 'genewvectorproject',
   'khnewvectorasset'         : 'genewvectorresource',
   'khmodifyvectorasset'      : 'gemodifyvectorresource',
   'khnewdatabase'            : 'genewdatabase',
   'khmodifydatabase'         : 'gemodifydatabase',
   'khbuild'                  : 'gebuild',
   'khcancel'                 : 'gecancel',
   'khclean'                  : 'geclean',
   'khclearbad'               : 'geclearbad',
   'khresume'                 : 'geresume',
   'khsetbad'                 : 'gesetbad',
   'khinfo'                   : 'geinfo',
   'khquery'                  : 'gequery',

   'khaddtoimageryproject'    : 'geaddtoimageryproject',
   'khaddtoterrainproject'    : 'geaddtoterrainproject',
   'khdropfromimageryproject' : 'gedropfromimageryproject',
   'khdropfromterrainproject' : 'gedropfromterrainproject',
   'khmodifyimageryproject'   : 'gemodifyimageryproject',
   'khmodifyterrainproject'   : 'gemodifyterrainproject',
   'khnewimageryproject'      : 'genewimageryproject',
   'khnewterrainproject'      : 'genewterrainproject',
   'khnewimageryasset'        : 'genewimageryresource',
   'khnewterrainasset'        : 'genewterrainresource',
   'khmodifyimageryasset'     : 'gemodifyimageryresource',
   'khmodifyterrainasset'     : 'gemodifyterrainresource',
   'khmaskgen'                : 'gemaskgen',
   'khvirtualraster'          : 'gevirtualraster',
   'khtranslate'              : 'getranslate',
   'khreproject'              : 'gereproject',
}

# ****************************************************************************
# ***  toolsSymlinks for backwards compatibility wit 2.4 internal scripts
# ***  There are only made in the install dir (not the build dir)
# ****************************************************************************
toolsSymlinks = {
   'khupdatelut'              : 'geupdatelut',
}

# links are made in install/bin directory
for link, target in fusionSymLinks.items():
    env.installedExecutableSymlink('fusion_bin', link, target)

for link, target in toolsSymlinks.items():
    env.installedExecutableSymlink('tools_bin', link, target)


# Version information that was here has been moved to a central
# gee_version.h file.
fusionVerObj = env.SharedObject('fusionver.cpp')
env['FUSIONVER'] = fusionVerObj



def emitEnableJobStats(env, target, source):
   file = open(str(target[0]), 'w')
   file.writelines(['// DO NOT MODIFY - auto-generated file\n',
                    '// run scons with jobstats=[0|1]\n',
                    '\n'])
   if env['jobstats']:
      file.writelines(['#define JOBSTATS_ENABLED\n'])
   else:
      file.writelines(['#undef JOBSTATS_ENABLED\n'])
env.Command('enableJobStats.h', [env.Value(env['jobstats'])],
            [emitEnableJobStats])


origenv = env;

# let subdirs refer to headers as relative to the fusion directory
env = origenv.Clone();


env.Append(CPPPATH = [Dir('.'),    # generated header files
                      '#fusion',   # static header files
                      '#fusion/asset-tests/include', # asset tests headers
                      ])

# Define the path to assets for unit and memory tests:
env.Append(test_extra_cppflags = [
   '-DOPENGEE_ASSETS_DIR={0}'.format(
      'get_self_dir() + "{0}{1}"'.format(
         os.sep,
         repr(os.path.join(
            'fusion', 'testdata', 'gevol', 'assets'
         ))[1:-1].replace('"', '\\"') ) )])

SConscript('khraster/SConscript', exports='env')
SConscript('khgdal/SConscript', exports='env')
SConscript('ffio/SConscript', exports='env')
SConscript('autoingest/SConscript', exports='env')
SConscript('rasterfuse/SConscript', exports='env')
SConscript('terrainfuse/SConscript', exports='env')
SConscript('khrasterize/SConscript', exports='env')
SConscript('mtjtools/SConscript', exports='env')
SConscript('dbroot/SConscript', exports='env')
SConscript('gepublish/SConscript', exports='env')
SConscript('geindexgen/SConscript', exports='env')
SConscript('searchtabs/SConscript', exports='env')
SConscript('dbmanifest/SConscript', exports='env')
SConscript('dbgen/SConscript', exports='env')
SConscript('iconutil/SConscript', exports='env')
SConscript('geqtgen/SConscript', exports='env')
SConscript('gecombineterrain/SConscript', exports='env')
SConscript('config/SConscript', exports='env')
SConscript('gecrawler/SConscript', exports='env')
SConscript('geindexcheck/SConscript', exports='env')

# let subdirs refer to headers as relative to the fusion directory
# also include the gst directory.
env = origenv.Clone();
env.Append(CPPPATH = [Dir('.'),    # generated header files
                      '#fusion',   # static header files
                      '#fusion/gst',
                      ])

SConscript('asset-tests/SConscript', exports='env')
SConscript('gst/SConscript', exports='env')
SConscript('tools/SConscript', exports='env')
SConscript('portableglobe/SConscript', exports='env')
SConscript('portableglobe/quadtree/SConscript', exports='env')
SConscript('fusionui/SConscript', exports='env')
SConscript('gemaptilegen/SConscript', exports='env')
