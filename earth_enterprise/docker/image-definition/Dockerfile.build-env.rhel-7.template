# We only need a few context files, rather than the whole repository:
# --[ TST-Dockerfile: context-dir=earth_enterprise/docker/image-definition ]--
# Prompt the user to enter variables required to build this Dockerfile:
# --[ TST-Dockerfile: required-vars=REDHAT_USERNAME ]--
# Avoid displaying the values of some variables:
# --[ TST-Dockerfile: required-password-vars=REDHAT_PASSWORD ]--

FROM registry.access.redhat.com/rhel:7.3

# Install required packages.
#   The "X Window System" is not needed for building, but for running the
# Fusion UI.
#   The 'pexpect' and 'python-tornado' packages are not needed for Earth
# Server, or Fusion, but they are for Portable Server.
#   The 'wget' package is needed for downloading the 'epel-release' package.
#   We register the Docker image with the Red Hat repository provider (you
# need to have a username and password) so we can install Yum packages.  We
# unregister when we finish, so we're not taking up a machine license.
WORKDIR /root
RUN subscription-manager register \
        --username=${REDHAT_USERNAME_ESCAPED} --password=${REDHAT_PASSWORD_ESCAPED} \
        --auto-attach && \
    yum update -y && \
    yum install -y git wget && \
    wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \
    yum install -y epel-release-latest-7.noarch.rpm && \
    yum --setopt=group_package_types=mandatory,default,optional groupinstall -y "Development Tools" && \
    yum install -y bison-devel freeglut-devel gdbm-devel geos-devel giflib-devel gtest-devel \
        libcap-devel libmng-devel libpng12-devel libX11-devel libXcursor-devel libXft-devel \
        libXinerama-devel libXmu-devel libXrandr-devel libxml2-devel ogdi-devel openjpeg-devel \
        openjpeg2-devel openssl-devel perl-Alien-Packages perl-Perl4-CoreLibs proj-devel \
        python-devel scons xerces-c xerces-c-devel xorg-x11-server-devel zlib-devel && \
    yum groupinstall -y "X Window System" && \
    yum install -y pexpect python-tornado && \
    subscription-manager unregister

# Install Git-LFS:
RUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.rpm.sh | bash && \
    yum install -y install git-lfs

# Copy shell scripts to /root/bin in the Docker container:
RUN mkdir -p /root/opengee/bin
COPY scripts /root/opengee/bin

# Make a build directory:
RUN mkdir -p /root/opengee/build
