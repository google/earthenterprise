#-*- Python -*-
#
# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import sys
import os
import commands         # TODO: This has been deprecated since 2.6 (?)

env = Environment()

# process commandline arguments
installdir = ARGUMENTS.get('installdir', 0)

# this fallback really shouldn't be used, whenever you specify the install
# target you should also specify an install dir.
# But having a default makes the rest of the SCons code easier
if (not installdir) and ('install' in COMMAND_LINE_TARGETS):
   print "installdir=... must be specified with install target"
   Exit(1)

tutorials_dir = installdir + '/tutorial'
root_dir = tutorials_dir + '/opt/google/share/tutorials/fusion/'

def makeHardLinks(install_dir, target_dir, excluded_list):
    # get contents of target_dir and make hard links to files in install_dir
    # recurse down the directories

    contents = os.listdir(target_dir)
    target_dir = target_dir + "/"	# TODO: This should probably be os.sep()
    # Ensure the install dir exists at each step
    commands.getstatusoutput("mkdir -p " + install_dir)
    for file in contents:
        if file in excluded_list:
            continue
        target_file = target_dir + file
        if os.path.isdir(target_file):
            subdir = install_dir + "/" + file
            makeHardLinks(subdir, target_file,
                                             excluded_list)
        else:
            commands.getstatusoutput("ln \"" + target_file + "\" " +
                                     install_dir)


def makeSoftLinks(dest_dir, src_dir, excluded_list):
    """Make soft links of all files in src_dir and place
    them in dest_dir. Don't link to files in excluded_list.
    Recurse through all subdirectories of src_dir.
    """

    src_contents = os.listdir(src_dir)
    #src_dir = src_dir + "/"	# TODO: This should probably be os.sep()
    #       ^^ Do I even need this?
    # Ensure the install dir exists at each step
    commands.getstatusoutput("mkdir -p " + dest_dir)

    import pdb
    pdb.set_trace()

    for file in src_contents:
        if file in excluded_list:
            continue
        # Use full paths to all files so `ln -s ... ` succeeds 
        #src_filepath = os.sep.join((os.getcwd(), src_dir, file))
        #src_filepath = os.sep.join((src_dir, file))
        src_filepath = os.sep.join((os.getcwd().split(os.sep) +
                            filter(None,src_dir.split(os.sep)) + [file]))
        #dest_filepath = os.sep.join((os.getcwd().split(os.sep) +
        dest_filepath = os.sep.join((dest_dir.split(os.sep) + [file]))
        #dest_filepath = os.sep.join((dest_dir.split(os.sep) + [file]))
        #dest_filepath = os.sep.join((dest_dir, file))
        if os.path.isdir(src_filepath):
            #dest_subdir = dest_filepath + "/" + file
            dest_subdir = os.sep.join((
                                filter(None,dest_dir.split(os.sep)), [file]))
            # Recurse for next-lower directory
            #makeSoftLinks(dest_filepath, src_filepath,
            makeSoftLinks(dest_subdir, src_filepath,
                                             excluded_list)
        else:
            commands.getstatusoutput('ln -s "' + src_filepath + '" "' +
                                    dest_filepath + '"')

# Clean install dir (note: the current sconscripts leave stuff behind, like
# directories).
if env.GetOption('clean'):
    # clean the search and getomcat install folders.
    commands.getstatusoutput("rm -rf " + tutorials_dir)
else:
    makeSoftLinks(root_dir, 'FusionTutorial/', ['.svn'])
